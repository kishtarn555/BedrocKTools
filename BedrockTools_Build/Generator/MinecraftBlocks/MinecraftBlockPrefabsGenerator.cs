using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace BedrockTools_Build.Generator.MinecraftBlocks {
    class MinecraftBlockPrefabsGenerator : Generator {
        BlockList blocks;
        
        public MinecraftBlockPrefabsGenerator(string target, BlockList blockList) : base(target) {
            blocks = blockList;
        }

        public override void Generate() {
            File.WriteAllText(Path.Combine(Setting.ProjectPath, "Objects/Minecraft/Blocks"), GetCode());

        }

        public override string GetCode() {
            return
 $@"
// =============================================================================
// THIS CODE WAS AUTOGENERATED BY @BedrockTools_Build.Generator
// Do not modify, any changes may be lost when the generation tool is run again
// Last build: {DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")}
// ==============================================================================

using System;

namspace BedrockTools.Objects;
public sealed class MinecraftBlockPrefabs {{

    static MinecraftBlockPrefabs _instance = null;
        Dictionary<string, Block> blockDictionary;
        public static MinecraftBlockPrefabs Instance {{
            get {{
                if (_instance == null)
                    _instance = new MinecraftBlockPrefabs();
                return _instance;
            }}
        }}

        public Block GetPrefabByName(string name) {{
            return blockDictionary[name];
        }}

        private MinecraftBlockPrefabs() {{
            this.blockDictionary = new Dictionary<string, Block>();
        }}
    }}
}}
";
        }
    }
}

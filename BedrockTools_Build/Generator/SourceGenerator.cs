using System;
using System.Collections.Generic;
using System.IO;

namespace BedrockTools_Build.Generator {
    public class SourceGenerator  {
        public string Target { get; set; }
        public ICodeGenerator CodeGenerator { get; set; }
        public Dictionary<string, string> Properties { get; set; }

        public SourceGenerator(string target, ICodeGenerator codeGenerator, Dictionary<string, string> properties = null) {
            Target = target;
            CodeGenerator = codeGenerator;
            Properties=properties?? new Dictionary<string, string>();
        }

        public virtual void WriteCode() {
            Console.WriteLine("Writing file: "+Target);
            CodeBuilder builder = new CodeBuilder();
            builder
                .WriteLine("//==============================================================================")
                .WriteLine($"// THIS CODE WAS AUTOGENERATED BY:")
                .Ident()
                    .Write("//")
                    .WriteLine($"{CodeGenerator}")
                .Deident()
                .WriteLine("// Do not modify, any changes will be lost when the generation tool is run again");
            foreach (var property in Properties) {
                builder.WriteLine($"// {property.Key}: {property.Value}");
            }
                builder.WriteLine("//==============================================================================");
            builder.Write(CodeGenerator.GetCode());
            File.WriteAllText(Path.Combine(Setting.ProjectPath, Target), builder.ToString());
        }        
    
    }
}


// ==============================================================================
// THIS CODE WAS AUTOGENERATED BY @BedrockTools_Build
// Do not modify, any changes may be lost when the generation tool is run again
// Last build: 2022-10-02 05:00:22 UTC
// ==============================================================================

using System;
using System.Collections.Generic;
using BedrockTools.Objects.Minecraft.Blocks;

namespace BedrockTools.Objects.Minecraft {

    public sealed class MinecraftBlockPrefabs {
        static MinecraftBlockPrefabs _instance = null;
        Dictionary<string, Block> blockDictionary;

        public static MinecraftBlockPrefabs Instance {
            get {
                if (_instance == null)
                    _instance = new MinecraftBlockPrefabs();
                return _instance;
            }
        }

        public Block GetPrefabByName(string name) {
            return blockDictionary[name];
        }

        private MinecraftBlockPrefabs() {
            this.blockDictionary = new Dictionary<string, Block>();
            blockDictionary.Add("Air", new BedrockTools.Objects.Minecraft.Blocks.Air());
            blockDictionary.Add("Dirt.Normal", new BedrockTools.Objects.Minecraft.Blocks.DirtNormal());
            blockDictionary.Add("Dirt.Coarse", new BedrockTools.Objects.Minecraft.Blocks.DirtCoarse());
            blockDictionary.Add("Planks.Acacia", new BedrockTools.Objects.Minecraft.Blocks.PlanksAcacia());
            blockDictionary.Add("Planks.Birch", new BedrockTools.Objects.Minecraft.Blocks.PlanksBirch());
            blockDictionary.Add("Planks.Crimson", new BedrockTools.Objects.Minecraft.Blocks.PlanksCrimson());
            blockDictionary.Add("Planks.DarkOak", new BedrockTools.Objects.Minecraft.Blocks.PlanksDarkOak());
            blockDictionary.Add("Planks.Jungle", new BedrockTools.Objects.Minecraft.Blocks.PlanksJungle());
            blockDictionary.Add("Planks.Oak", new BedrockTools.Objects.Minecraft.Blocks.PlanksOak());
            blockDictionary.Add("Planks.Spruce", new BedrockTools.Objects.Minecraft.Blocks.PlanksSpruce());
            blockDictionary.Add("Planks.Warped", new BedrockTools.Objects.Minecraft.Blocks.PlanksWarped());
         }


        public static Air GetAir
            => (Air)MinecraftBlockPrefabs.Instance.GetPrefabByName("Air");
        public static class Dirt {
            public static DirtNormal GetNormal
                => (DirtNormal)MinecraftBlockPrefabs.Instance.GetPrefabByName("Dirt.Normal");
            public static DirtCoarse GetCoarse
                => (DirtCoarse)MinecraftBlockPrefabs.Instance.GetPrefabByName("Dirt.Coarse");
        }
        public static class Planks {
            public static PlanksAcacia GetAcacia
                => (PlanksAcacia)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Acacia");
            public static PlanksBirch GetBirch
                => (PlanksBirch)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Birch");
            public static PlanksCrimson GetCrimson
                => (PlanksCrimson)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Crimson");
            public static PlanksDarkOak GetDarkOak
                => (PlanksDarkOak)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.DarkOak");
            public static PlanksJungle GetJungle
                => (PlanksJungle)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Jungle");
            public static PlanksOak GetOak
                => (PlanksOak)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Oak");
            public static PlanksSpruce GetSpruce
                => (PlanksSpruce)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Spruce");
            public static PlanksWarped GetWarped
                => (PlanksWarped)MinecraftBlockPrefabs.Instance.GetPrefabByName("Planks.Warped");
        }

    }
}
